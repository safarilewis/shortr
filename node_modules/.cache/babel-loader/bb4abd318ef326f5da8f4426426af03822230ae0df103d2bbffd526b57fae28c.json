{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/port/food/src/LinkResult.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LinkResult = _ref => {\n  _s();\n  let {\n    inputValue\n  } = _ref;\n  const [shortenLink, setShortenLink] = useState(\"\");\n  console.log(shortenLink);\n  const [copied, setCopied] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const res = await axios(`https://api.shrtco.de/v2/shorten?url=${inputValue}`);\n      setShortenLink(res.data.result.full_short_link);\n    } catch (err) {} finally {}\n  };\n  useEffect(() => {\n    if (inputValue.length) {\n      fetchData();\n    }\n  }, [inputValue]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCopied(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [copied]);\n  console.log(shortenLink);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: shortenLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: shortenLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: shortenLink,\n        onCopy: () => setCopied(true),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: copied ? \"copied\" : \"\",\n          children: \"Copy to clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 30\n    }, this)\n  }, void 0, false);\n};\n_s(LinkResult, \"tNEhg+n5T+Qj3LoA6YmKyjfV/lg=\");\n_c = LinkResult;\nexport default LinkResult;\nvar _c;\n$RefreshReg$(_c, \"LinkResult\");","map":{"version":3,"names":["useEffect","useState","CopyToClipboard","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkResult","_ref","_s","inputValue","shortenLink","setShortenLink","console","log","copied","setCopied","loading","setLoading","fetchData","res","data","result","full_short_link","err","length","timer","setTimeout","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","text","onCopy","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/port/food/src/LinkResult.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport CopyToClipboard from \"react-copy-to-clipboard\"\nimport axios from \"axios\"\n\n\nconst LinkResult = ({ inputValue }) => {\n\n    const [shortenLink, setShortenLink] = useState(\"\");\n    console.log(shortenLink);\n\n    const [copied, setCopied] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n\n    const fetchData = async () => {\n        try {\n            setLoading(true);\n            const res = await axios(`https://api.shrtco.de/v2/shorten?url=${inputValue}`);\n            setShortenLink(res.data.result.full_short_link);\n\n        } catch (err) {\n\n        } finally {\n\n        }\n    }\n\n    useEffect(() => {\n        if (inputValue.length) {\n            fetchData();\n        }\n    }, [inputValue]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setCopied(false);\n        }, 1000)\n\n        return () => clearTimeout(timer);\n    }, [copied]);\n\n    console.log(shortenLink);\n\n    return (\n        <>\n            {shortenLink && (<div className=\"result\">\n                <p>{shortenLink}</p>\n\n                <CopyToClipboard\n                    text={shortenLink}\n                    onCopy={() => setCopied(true)}\n                >\n                    <button className={copied ? \"copied\" : \"\"}>Copy to clipboard</button>\n                </CopyToClipboard>\n            </div>)}\n        </>\n\n    )\n}\n\nexport default LinkResult"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzB,MAAMC,UAAU,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAE9B,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClDa,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAExB,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAG7C,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACAD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,GAAG,GAAG,MAAMlB,KAAK,CAAE,wCAAuCQ,UAAW,EAAC,CAAC;MAC7EE,cAAc,CAACQ,GAAG,CAACC,IAAI,CAACC,MAAM,CAACC,eAAe,CAAC;IAEnD,CAAC,CAAC,OAAOC,GAAG,EAAE,CAEd,CAAC,SAAS,CAEV;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZ,IAAIW,UAAU,CAACe,MAAM,EAAE;MACnBN,SAAS,EAAE;IACf;EACJ,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhBX,SAAS,CAAC,MAAM;IACZ,MAAM2B,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC3BX,SAAS,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMY,YAAY,CAACF,KAAK,CAAC;EACpC,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZF,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAExB,oBACIP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EACKlB,WAAW,iBAAKP,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACpCzB,OAAA;QAAAyB,QAAA,EAAIlB;MAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAEpB9B,OAAA,CAACH,eAAe;QACZkC,IAAI,EAAExB,WAAY;QAClByB,MAAM,EAAEA,CAAA,KAAMpB,SAAS,CAAC,IAAI,CAAE;QAAAa,QAAA,eAE9BzB,OAAA;UAAQ0B,SAAS,EAAEf,MAAM,GAAG,QAAQ,GAAG,EAAG;UAAAc,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACf,iBACR;AAGX,CAAC;AAAAzB,EAAA,CArDKF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAuDhB,eAAeA,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}